# Docker container for safe autonomous Claude development
FROM node:18-bullseye

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    wget \
    bc \
    sqlite3 \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Install GitHub CLI
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
    && chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
    && apt-get update \
    && apt-get install gh -y

# Create placeholder for Claude CLI (will be mounted from host)
RUN echo '#!/bin/bash\necho "Claude CLI not mounted - run: docker run -v $(which claude):/usr/local/bin/claude"\necho "Commands: $@"\nexit 1' > /usr/local/bin/claude \
    && chmod +x /usr/local/bin/claude

# Create workspace
WORKDIR /workspace

# Create logs directory
RUN mkdir -p /workspace/logs

# Copy scripts
COPY production-auto-claude.sh /workspace/
COPY test-client.js /workspace/
COPY OVERNIGHT_REQUEST.txt /workspace/
COPY claude.md /workspace/

# Create a non-root user for security
RUN useradd -m -s /bin/bash claude-dev \
    && chown -R claude-dev:claude-dev /workspace

# Switch to non-root user
USER claude-dev

# Set up git config
RUN git config --global user.name "Auto-Claude Bot" \
    && git config --global user.email "auto-claude@spacepunk.dev"

# Default command
CMD ["./production-auto-claude.sh", "test"]